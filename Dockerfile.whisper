FROM goreleaser/goreleaser-cross:v1.23.3@sha256:cc69304a8817dde675f0afe551c380545d5f34444946004961116ff394437a6f AS builder

RUN apt-get update
# TODO: unzip here
RUN apt-get install -y git
# ENV GOPROXY=http://192.168.0.29:3000

RUN mkdir -p /Users/mpl
ENV GOPATH=/Users/mpl
RUN go install github.com/gokrazy/tools/cmd/gok@6bec690fe5cd

WORKDIR /Users/mpl/src/github.com/mpl/cgodemo/whisper
COPY ./whisper .
# TODO: just run make libwhisper.a in .cpp
RUN cd ./whisper.cpp/bindings/go && make whisper
# RUN cd ./whisper.cpp && make libwhisper.a
# ENV WHIPSPER_CPP=/Users/mpl/src/github.com/mpl/cgodemo/whisper/whisper.cpp

WORKDIR /Users/mpl/src/github.com/mpl/cgodemo/gokrazy
COPY ./gokrazy .

# credentials for fetching private (repos) deps.
# N.B: gitcreds is going to leak into the docker image, so beware where we're building that.
ARG gitcreds
COPY ./gitcreds.sh .
RUN ./gitcreds.sh $gitcreds

# if we let that be implicitly done during gok update, then whisper.h is not found during the compilation of the bindings.
# while if we do it here and now, no problem. So it's necessary to keep it until we understand better what's going on.
WORKDIR /Users/mpl/src/github.com/mpl/cgodemo/whisper
RUN make build

# TODO: move it up, and probably even in an early stage
# TODO: rename/move it to /Users/mpl in buildir when we have new laptop.
# TODO: or find a way to make path dynamic, so we can (at least partially) build both with or without docker.
WORKDIR /Users/mpl/src/github.com/mpl/cgodemo/syslogd
COPY ./syslogd .
WORKDIR /Users/mpl/src/github.com/mpl/cgodemo/localhello
COPY ./localhello .

FROM builder AS update
ENV GOPROXY=http://192.168.0.47:3000,https://proxy.golang.org,direct
ENV GOSUMDB=off
# TODO: move it up
WORKDIR /Users/mpl/src/github.com/mpl/cgodemo/bin
COPY ./bin .
WORKDIR /Users/mpl/src/github.com/mpl/cgodemo
COPY ./Makefile .
RUN apt-get install -y unzip
RUN make updatenodocker

FROM builder AS forceupdate
ENV GOPROXY=http://192.168.0.47:3000,https://proxy.golang.org,direct
ENV GOSUMDB=off
# TODO: move it up
WORKDIR /Users/mpl/src/github.com/mpl/cgodemo/
COPY ./Makefile .
RUN make forceupdatenodocker
